
@model ShiftBusiness.Shift.Shift

@{
    List<ShiftBusiness.Hospital.ShiftType> types = new ShiftBusiness.Service.ShiftTypeService().List();
    List<ShiftBusiness.Hospital.ShiftPlan> plans = new ShiftBusiness.Service.ShiftPlanService().List();
    List<ShiftBusiness.Hospital.Employee> employees = new ShiftBusiness.Service.EmployeeService().List();
   
}


<div class="form-group">
    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.EmployeeId, new SelectList(employees,"Id","Name"), new {@class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShiftDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ShiftDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShiftDate, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShiftTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.ShiftTypeId, new SelectList(types,"Id","Name"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ShiftTypeId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShiftPlanId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.ShiftPlanId, new SelectList(plans,"Id","Name"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ShiftPlanId, "", new { @class = "text-danger" })
    </div>
</div>

